<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhjitem.community.mapper.QuestionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.lhjitem.community.model.Question">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="description" property="description" />
        <result column="gmt_create" property="gmtCreate" />
        <result column="gmt_modified" property="gmtModified" />
        <result column="creator" property="creator" />
        <result column="comment_count" property="commentCount" />
        <result column="view_count" property="viewCount" />
        <result column="like_count" property="likeCount" />
        <result column="tag" property="tag" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, title, description, gmt_create, gmt_modified, creator, comment_count, view_count, like_count, tag
    </sql>
    
    
    <!--当并发量庞大时，例如查阅数的累加我们要保证原子性，所以我们根据数据库原有的数据进行加减-->
    <update id="addView" parameterType="com.lhjitem.community.model.Question">
        update QUESTION
        set VIEW_COUNT = VIEW_COUNT + #{viewCount,jdbcType=BIGINT}
        where id = #{id}
    </update>

    <update id="addCommentCount" parameterType="com.lhjitem.community.model.Question">
        update QUESTION
        set COMMENT_COUNT = COMMENT_COUNT + #{commentCount,jdbcType=BIGINT}
        where id = #{id}
    </update>


    <!--相关内容（根据标签）推荐-->
    <select id="selectRelated" parameterType="com.lhjitem.community.model.Question" resultMap="BaseResultMap">
        select *
        from QUESTION where id != #{id} and tag regexp #{tag}
    </select>

    <!--根据关键字查找相关问题的数量-->
    <select id="countBySearch" parameterType="com.lhjitem.community.dto.QuestionQueryDTO" resultType="java.lang.Integer">
        select count(*) from QUESTION
        <where>
            <if test="search != null and search != ''">
                and title regexp #{search}
            </if>
        </where>
    </select>


    <!--根据关键字查找相关问题-->
    <!--直接前端和controller判断字符串比较好，在mapper太靠后了，如果并发量大的话浪费了系统资源-->
    <select id="selectBySearch" parameterType="com.lhjitem.community.dto.QuestionQueryDTO" resultMap="BaseResultMap">
        select * from QUESTION
        <where>
            <if test="search != null and search != ''">
                and title regexp #{search}
            </if>
        </where>
        order by id DESC limit #{page},#{size}
    </select>
</mapper>
